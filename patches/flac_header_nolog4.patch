diff -pruN ffmpeg-3.3.2/libavcodec/flac.c ffmpeg-3.3.2.2/libavcodec/flac.c
--- ffmpeg-3.3.2/libavcodec/flac.c	2017-06-07 09:03:53.000000000 +0700
+++ ffmpeg-3.3.2.2/libavcodec/flac.c	2017-07-17 00:28:38.000000000 +0700
@@ -54,7 +54,8 @@ int ff_flac_decode_frame_header(AVCodecC
 
     /* frame sync code */
     if ((get_bits(gb, 15) & 0x7FFF) != 0x7FFC) {
-        av_log(avctx, AV_LOG_ERROR + log_level_offset, "invalid sync code\n");
+		if (log_level_offset < 40)
+        av_log(avctx, AV_LOG_ERROR + log_level_offset, "%d invalid sync code\n", log_level_offset);
         return AVERROR_INVALIDDATA;
     }
 
@@ -74,6 +75,7 @@ int ff_flac_decode_frame_header(AVCodecC
         fi->channels = 2;
         fi->ch_mode -= FLAC_MAX_CHANNELS - 1;
     } else {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "invalid channel mode: %d\n", fi->ch_mode);
         return AVERROR_INVALIDDATA;
@@ -82,6 +84,7 @@ int ff_flac_decode_frame_header(AVCodecC
     /* bits per sample */
     bps_code = get_bits(gb, 3);
     if (bps_code == 3 || bps_code == 7) {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "invalid sample size code (%d)\n",
                bps_code);
@@ -91,6 +94,7 @@ int ff_flac_decode_frame_header(AVCodecC
 
     /* reserved bit */
     if (get_bits1(gb)) {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "broken stream, invalid padding\n");
         return AVERROR_INVALIDDATA;
@@ -99,6 +103,7 @@ int ff_flac_decode_frame_header(AVCodecC
     /* sample or frame count */
     fi->frame_or_sample_num = get_utf8(gb);
     if (fi->frame_or_sample_num < 0) {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "sample/frame number invalid; utf8 fscked\n");
         return AVERROR_INVALIDDATA;
@@ -106,6 +111,7 @@ int ff_flac_decode_frame_header(AVCodecC
 
     /* blocksize */
     if (bs_code == 0) {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "reserved blocksize code: 0\n");
         return AVERROR_INVALIDDATA;
@@ -127,6 +133,7 @@ int ff_flac_decode_frame_header(AVCodecC
     } else if (sr_code == 14) {
         fi->samplerate = get_bits(gb, 16) * 10;
     } else {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "illegal sample rate code %d\n",
                sr_code);
@@ -137,6 +144,7 @@ int ff_flac_decode_frame_header(AVCodecC
     skip_bits(gb, 8);
     if (av_crc(av_crc_get_table(AV_CRC_8_ATM), 0, gb->buffer,
                get_bits_count(gb)/8)) {
+		if (log_level_offset < 40)
         av_log(avctx, AV_LOG_ERROR + log_level_offset,
                "header crc mismatch\n");
         return AVERROR_INVALIDDATA;
diff -pruN ffmpeg-3.3.2/libavcodec/flac_parser.c ffmpeg-3.3.2.2/libavcodec/flac_parser.c
--- ffmpeg-3.3.2/libavcodec/flac_parser.c	2017-06-07 09:03:53.000000000 +0700
+++ ffmpeg-3.3.2.2/libavcodec/flac_parser.c	2017-07-17 00:26:24.000000000 +0700
@@ -344,8 +344,9 @@ static int check_header_mismatch(FLACPar
             deduction_expected = deduction ? 0 : 1;
 
         deduction += FLAC_HEADER_CHANGED_PENALTY;
+		if ( log_level_offset < 40 ) 
         av_log(fpc->avctx, AV_LOG_WARNING + log_level_offset,
-                   "sample/frame number mismatch in adjacent frames\n");
+                   "%d sample/frame number mismatch in adjacent frames\n", log_level_offset);
     }
 
     /* If we have suspicious headers, check the CRC between them */
@@ -439,7 +440,7 @@ static int score_header(FLACParseContext
            changes between the headers. */
         if (header->link_penalty[dist] == FLAC_HEADER_NOT_PENALIZED_YET) {
             header->link_penalty[dist] = check_header_mismatch(fpc, header,
-                                                               child, AV_LOG_DEBUG);
+                                                              child, AV_LOG_DEBUG);
         }
         child_score = score_header(fpc, child) - header->link_penalty[dist];
 
